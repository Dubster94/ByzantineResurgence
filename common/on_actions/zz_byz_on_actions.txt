#To any modder who wishes to keep compatibility: If you change any of the below on_actions, simply copy over whatever I declare in these on_actions to your mod.
#Since it will never take effect unless my mod is loaded, as the flag is set upon reading my mod's history file for Byzantium, it'll do nothing to your users.
#If you want me to add your stuff in here, use a similar solution of adding a global flag and make your on_action script dependent on that flag being loaded.
#Then send said piece of code to me, or tell me to take a look at your mod's. I'll add it in here.
#
#Kind regards,
#Dub.

#NB: This file replaces specific on_action effects. In each on_action the effects are ordered in Vanilla - BR (Byzantine Resurgence) - BT (Beyond Typus).

#Byz_startup to allow for unintegrated events
on_startup = {
	if = {
		limit = {
			current_age = age_of_discovery
		}
		LXA = {
			if = {
				limit = {
					NOT = { has_country_flag = lxa_loyalty_flag }
				}
				add_estate_loyalty = {
					estate = estate_church
					loyalty = -10
				}
				set_country_flag = lxa_loyalty_flag
			}
		}
	}
	emperor = {
		save_global_event_target_as = Emperor
	}
	if = {
		limit = {
			is_emperor_of_china = yes
		}
		save_global_event_target_as = EmperorOfChina
	}
	events = {
		muslim_school_events.20 #Pick School
		flavor_got.1 #Event for Gotland to select their mission tree
		flavor_mng.42 #Event for the starting situation of the Ming 
		#flavor_fra.15000 #Make the French Revolution happen if starting in 1789
		flavor_mos.1 #Event regarding the Tatar Yoke
	}
	if = {
		limit = {
			has_dlc = "Cradle of Civilization"
			has_country_modifier = tur_janissary
		}
		remove_country_modifier = tur_janissary
	}
	initialize_schools_effect = yes #This is only used here but is used for readability of on_action file.

	if = {
		limit = {
			NOT = { has_country_flag = new_flavour_bav_13_has_been_triggered }
			OR = {
				tag = UBV
				tag = LBV
				tag = ING
			}
		}
		set_country_flag = new_flavour_bav_13_has_been_triggered
		country_event = { id = new_flavour_bav.13 days = 90 } #better not to allow almost instant DOWs
	}
	if = {
		limit = {
			tag = FRA
			started_in = 1789.7.14
			NOT = { is_year = 1790 }
			NOT = { has_disaster = french_revolution }
		}
		add_disaster_progress = {
			value = 100
			disaster = french_revolution
		}
	}
	if = {
		limit = {
			exists = SUK
		}
		SUK = {
			set_ruler_flag = suk_monarch_flag
		}
		AYU = {
			set_country_flag = ayu_monarch_flag
		}
	}
	#if = {
	#	limit = {
	#		OR = {
	#			primary_culture = norse
	#			AND = {
	#				culture_group = scandinavian
	#				religion = norse_pagan_reformed
	#			}
	#		}
	#		NOT = { has_idea_group = norse_ideas }
	#		is_playing_custom_nation = no
	#	}
	#	country_event = { id = ideagroups.1 } #Swap Ideas
	#}
	if = {
		limit = { 
			has_dlc = "Domination" 
			tag = FRA 
			NOT = { is_year = 1445 } 
		}
		country_event = { id = flavor_fra.206 }
	}
	if = {
		limit = {
			NOT = { has_global_flag = end_of_the_tatar_yoke }
			owns = 466
			is_year = 1480
		}
		set_global_flag = end_of_the_tatar_yoke
	}
	if = {
		limit = {
			OR = {
				has_country_modifier = rise_of_the_ottomans
				has_country_modifier = zenith_of_the_ottomans
				has_country_modifier = twilight_of_the_ottomans
				has_country_modifier = decline_of_the_ottomans
			}
		}
		remove_country_modifier = rise_of_the_ottomans
		remove_country_modifier = zenith_of_the_ottomans
		remove_country_modifier = twilight_of_the_ottomans
		remove_country_modifier = decline_of_the_ottomans
	}
	if = {
		limit = {
			has_government_mechanic = ottoman_decadence_mechanic
			current_age = age_of_discovery
		}
		add_country_modifier = {
			name = rise_of_the_ottomans
			duration = -1
			desc = until_end_of_age_desc
		}
	}
	if = {
		limit = {
			has_government_mechanic = ottoman_decadence_mechanic
			current_age = age_of_reformation
		}
		add_country_modifier = {
			name = zenith_of_the_ottomans
			duration = -1
			desc = until_end_of_age_desc
		}
	}
	if = {
		limit = {
			has_government_mechanic = ottoman_decadence_mechanic
			current_age = age_of_absolutism
		}
		add_country_modifier = {
			name = twilight_of_the_ottomans
			duration = -1
			desc = until_end_of_age_desc
		}
	}
	if = {
		limit = {
			has_government_mechanic = ottoman_decadence_mechanic
			current_age = age_of_revolutions
		}
		add_country_modifier = {
			name = decline_of_the_ottomans
			duration = -1
			desc = until_end_of_age_desc
		}
	}
	#BR
	if = {
		limit = {
			has_global_flag = byz_resurgence_loaded
		}
		#Adding the Schismatic Relations province triggered modifier. Does cause certain savegame bloat, but it is frankly quite necessary for now unless I only add it to Orthodox provinces and add it dynamically as more are converted.
		#Cut because of new estate privileges in 1.35 (?)
		# if = {
			# limit = {
				# NOT = { has_global_flag = br_schismatic_relations_added }
			# }
			# every_province = {
				# limit = {
					# NOT = { has_province_modifier = orthodox_catholic_relations }
				# }
				# add_province_triggered_modifier = orthodox_catholic_relations
			# }
			# set_global_flag = br_schismatic_relations_added
		# }
		set_global_flag = bt_april_storms_passed
	}
}
#Byz adding Demetrios Palaiologos as pretender event, as well as the Basileus Protostrategos mechanic.
on_monarch_death = {
	if = {
		limit = {
			tag = ANS
			BRA = {
				has_country_flag = albrecht_achilles_flag
			}
		}
		BRA = {
			clr_country_flag = albrecht_achilles_flag #Just to be sure
			kill_heir = {} #If Albrecht Achilles dies in Ansbach he will also be dead in Brandenburg, will appear as normal death of heir to BRA.
		}
	}
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}
	if = {
		limit = {
			tag = SAX
			has_country_flag = sax_thuringen_split_to_happen
			OR = {
				NOT = { dynasty = "von Wettin" }
				NOT = { senior_union_with = THU }
				has_regency = yes
			}
		}
		clr_country_flag = sax_thuringen_split_to_happen
	}
	if = {
		limit = { tag = SAM }
		country_event = { id = polynesian.35 }
	}
	if = {
		limit = { tag = TOG }
		country_event = { id = polynesian.36 }
	}
	if = {	# Ascension of Trailokanat	
		limit = { tag = AYU }
		country_event = { id = flavor_suk.1 }
	}
	if = {
		limit = { tag = GOT }
		country_event = { id = flavor_got.37 }
	}
	if = {
		limit = { has_government_attribute = no_stability_loss_on_monarch_death }
		add_stability = 1	 			
	}
	burgundian_inheritance_start_effect = yes
	ladislaus_postumus_king_died_effect = yes
	choc_FrederickIII_dies_first = yes	#BT
	choc_AlbrechtVI_dies_first = yes	#BT
	joan_de_trastamara_king_died_effect = yes
	#BT
	#if = {
	#	limit = {
	#		has_reform = tanistry_reform
	#		NOT = { has_country_flag = bt_abolition_of_tanistry_succession }
	#	}
	#	set_country_flag = bt_tanistry_king_just_died
	#	clr_country_flag = bt_tanistry_high_queen_reigning
	#	remove_country_modifier = bt_uncertainty_about_a_high_queen
	#	remove_country_modifier = bt_tanistry_underaged_heir
	#	remove_country_modifier = bt_tanistry_female_heir
	#	remove_country_modifier = bt_tanistry_waiting_on_heir
	#}
	events = {
		flavor_wal.1 # Vlad the Impaler. So that he doesn't try to usurp his father.
		flavor_nav.4 # Navarra succession event
		flavor_sax.8 # Treaty of Leipzig
		flavor_pap.16 # Borgia Pope
		flavor_pap.19 # death of borgia pope
		flavor_tus.22 # Medici Pope
		flavor_tus.24 # death of the Medici Pope
		majapahit.8 # Majapahit pretenders
		flavor_mal.11 # Mali pretenders
		flavor_mal.47 # Pilgrimage ends prematurely
		government_events.3	# Election of a new Ruler
	}
	#April Fools:
	if = {
		limit = {
			has_global_flag = bt_storms_a_brewin
		}
		CSC = {
			if = {
				limit = {
					has_ruler = "Chairman Meow"
				}
				define_heir = {
					name = "HR"
					dynasty = "of Beyond the Pale"
					culture = celtic_irish_culture
					religion = animism
					adm = 5
					dip = 5
					mil = 5
					age = 30
					claim = 95
				}
				add_heir_personality = immortal_personality
			}
			else_if = {
				limit = {
					has_ruler = "HR"
				}
				define_heir = {
					name = "Dub"
					dynasty = "of Beyond the Pale"
					culture = celtic_irish_culture
					religion = animism
					adm = 5
					dip = 3
					mil = 6
					age = 28
					claim = 95
				}
				add_heir_personality = immortal_personality
			}
			else_if = {
				limit = {
					has_ruler = "Dub"
				}
				define_heir = {
					name = "neo"
					dynasty = "of Beyond the Pale"
					culture = celtic_irish_culture
					religion = animism
					adm = 5
					dip = 4
					mil = 5
					age = 25
					claim = 95
				}
				add_heir_personality = immortal_personality
			}
			else_if = {
				limit = {
					has_ruler = "neo"
				}
				define_heir = {
					name = "Chrysocyon"
					dynasty = "of Beyond the Pale"
					culture = celtic_irish_culture
					religion = animism
					adm = 6
					dip = 6
					mil = 3
					age = 25
					claim = 95
				}
				add_heir_personality = immortal_personality
			}
			else_if = {
				limit = {
					has_ruler = "Chrysocyon"
				}
				define_heir = {
					name = "Nikicaga"
					dynasty = "of Beyond the Pale"
					culture = celtic_irish_culture
					religion = animism
					adm = 6
					dip = 4
					mil = 4
					age = 24
					claim = 95
				}
				add_heir_personality = immortal_personality
			}
			else_if = {
				limit = {
					has_ruler = "Nikicaga"
				}
				define_heir = {
					name = "Math5615"
					dynasty = "of Beyond the Pale"
					culture = celtic_irish_culture
					religion = animism
					adm = 4
					dip = 4
					mil = 4
					age = 26
					claim = 95
				}
				add_heir_personality = immortal_personality
			}
			else_if = { #Cycle resets
				limit = {
					has_ruler = "Math5615"
				}
				define_heir = {
					name = "Draíocht"
					dynasty = "of Beyond the Pale"
					culture = celtic_irish_culture
					religion = animism
					adm = 6
					dip = 4
					mil = 5
					age = 30
					claim = 95
				}
				add_heir_personality = immortal_personality
			}
			else = { 
				define_heir = {
					name = "Chairman Meow"
					dynasty = "of Beyond the Pale"
					culture = celtic_irish_culture
					religion = animism
					adm = 3
					dip = 6
					mil = 4
					age = 25
					claim = 95
				}
				add_heir_personality = immortal_personality
				
			}
		}
	}
	
	#BR
	if = {
		limit = {
			has_global_flag = byz_resurgence_loaded
			tag = BYZ
			BYZ = {
				has_country_flag = rebellious_demetrios_flag
			}
		}
		BYZ = {
			country_event = { id = integrated_byz_events.16 } #The Rebellion of Demetrios Palaiologos
			clr_country_flag = rebellious_demetrios_flag #Just to be sure
		}
	}
	if = { #Making the ruler a general if you've got the Basileus Protostrategos reform.
		limit = {
			has_global_flag = byz_resurgence_loaded
			has_government_attribute = forces_ruler_general
			has_country_flag = byz_restored_militarization_mechanic
			is_monarch_leader = no
		}
		if = {
			limit = {
				is_female = yes
			}
			convert_female_ruler_to_general = yes
		}
		else = {
			convert_ruler_to_general = yes
		}
	}
	if = { #Fixing Armenian-Georgian Bagrationi-Bagratuni spelling issue making the game consider them separate dynasties. Does not clear flag because I am worried the game will autogenerate a new heir of Bagrationi before the new dynasty is set. Will have to test this I suppose.
		limit = {
			tag = ARM
			has_country_flag = br_bagratunis_invited
			dynasty = "Bagrationi"
		}
		set_dynasty = "Bagratuni"
	}
}
#Byz_estates
on_five_year_pulse_2 = {
	random_events = {
		#Vanilla
		# Burghers
		100 = burghers_estate_events.1
		100 = burghers_estate_events.2
		100 = burghers_estate_events.3
		100 = burghers_estate_events.4
		100 = burghers_estate_events.5
		100 = burghers_estate_events.6
		100 = burghers_estate_events.7
		100 = burghers_estate_events.8
		100 = burghers_estate_events.9
		400 = burghers_estate_events.10 #Demands
		100 = burghers_estate_events.11 #Bonus
		100 = burghers_estate_events.12
		100 = burghers_estate_events.13
		400 = burghers_estate_events.14 #Demands
		100 = burghers_estate_events.15 #Disloyal
		# Nobles
		100 = nobles_estate_events.1 #Demands
		100 = nobles_estate_events.2
		100 = nobles_estate_events.3
		100 = nobles_estate_events.4
		400 = nobles_estate_events.5 #Demands
		100 = nobles_estate_events.6
		100 = nobles_estate_events.7
		400 = nobles_estate_events.8 #Disloyal
		400 = nobles_estate_events.9 #Disloyal
		50 = nobles_estate_events.10
		100 = nobles_estate_events.11 #Bonus
		# Clergy
		100 = church_estate_events.1
			#Regional Variations:
			100 = church_estate_events.101
			100 = church_estate_events.102
			100 = church_estate_events.103
			100 = church_estate_events.104
			100 = church_estate_events.105
		100 = church_estate_events.2
		100 = church_estate_events.3
		100 = church_estate_events.4
		400 = church_estate_events.5 #Disloyal
		400 = church_estate_events.6 #Demands
		100 = church_estate_events.7 #Bonus
		100 = church_estate_events.8
		100 = church_estate_events.9
		100 = church_estate_events.10
		# Dhimmi
		100 = dhimmi_estate_events.1
		400 = dhimmi_estate_events.2 #Demands
		100 = dhimmi_estate_events.3
		100 = dhimmi_estate_events.4
		100 = dhimmi_estate_events.5
		100 = dhimmi_estate_events.6
		400 = dhimmi_estate_events.7 #Disloyal
		100 = dhimmi_estate_events.8
		# Cossacks
		100 = cossack_estate_events.1
		#100 = cossack_estate_events.2 (triggers in neighbor country)
		100 = cossack_estate_events.6
		100 = cossack_estate_events.7
		100 = cossack_estate_events.8
		100 = cossack_estate_events.9
		100 = cossack_estate_events.10
		100 = cossack_estate_events.11
		400 = cossack_estate_events.12 #Disloyal
		100 = cossack_estate_events.13
		400 = cossack_estate_events.14 #Demands
		# Tribes
		100 = tribal_estate_events.1
		100 = tribal_estate_events.2
		100 = tribal_estate_events.3
		100 = tribal_estate_events.4
		100 = tribal_estate_events.5
		100 = tribal_estate_events.6
		100 = tribal_estate_events.7
		100 = tribal_estate_events.8
		100 = tribal_estate_events.9
		150 = tribal_estate_events.11 #Demands
		150 = tribal_estate_events.12 #Demands
		150 = tribal_estate_events.13 #Demands
		150 = tribal_estate_events.14 #Demands
		# Marathas
		100 = marathas_estate_events.2
		100 = marathas_estate_events.3
		100 = marathas_estate_events.4
		100 = marathas_estate_events.5
		100 = marathas_estate_events.6
		400 = marathas_estate_events.7 # Demands
		100 = marathas_estate_events.8
		100 = marathas_estate_events.9
		100 = marathas_estate_events.10
		400 = marathas_estate_events.11 # Disloyal
		# Brahmins
		400 = brahmins_estate_events.2 # demands
		100 = brahmins_estate_events.3
		100 = brahmins_estate_events.4
		100 = brahmins_estate_events.5
		400 = brahmins_estate_events.6 # disloyal
		100 = brahmins_estate_events.7
		100 = brahmins_estate_events.8
		100 = brahmins_estate_events.9
		100 = brahmins_estate_events.10
		100 = brahmins_estate_events.11
		# Jains
		100 = jains_estate_events.2
		100 = jains_estate_events.3
		100 = jains_estate_events.4
		100 = jains_estate_events.5
		100 = jains_estate_events.6
		100 = jains_estate_events.7
		400 = jains_estate_events.8 # Disloyal
		100 = jains_estate_events.9
		400 = jains_estate_events.10 # Demands
		100 = jains_estate_events.11
		# Vaishyas
		100 = vaisyas_estate_events.2
		100 = vaisyas_estate_events.3
		100 = vaisyas_estate_events.4
		100 = vaisyas_estate_events.5
		100 = vaisyas_estate_events.6
		100 = vaisyas_estate_events.7
		100 = vaisyas_estate_events.8
		400 = vaisyas_estate_events.9
		100 = vaisyas_estate_events.10
		100 = vaisyas_estate_events.11
		# Rajputs
		100 = rajputs_estate_events.2
		100 = rajputs_estate_events.3
		100 = rajputs_estate_events.4
		100 = rajputs_estate_events.5
		400 = rajputs_estate_events.6
		100 = rajputs_estate_events.7
		400 = rajputs_estate_events.8
		100 = rajputs_estate_events.9
		100 = rajputs_estate_events.10
		100 = rajputs_estate_events.11
		# Janissaries
		100 = janissaries_estate_events.1
		100 = janissaries_estate_events.2
		100 = janissaries_estate_events.3
		100 = janissaries_estate_events.4
		100 = janissaries_estate_events.5
		100 = janissaries_estate_events.6
		100 = janissaries_estate_events.7
		400 = janissaries_estate_events.8 # Disloyal
		400 = janissaries_estate_events.9 # Demands
		100 = janissaries_estate_events.10
		100 = janissaries_estate_events.11
		100 = janissaries_estate_events.12
		100 = janissaries_estate_events.13
		# Random
		5 = flavor_fra.9500
		1000 = 0
		
		#BR
		# Strategoi
		100 = strategoi_estate_events.1
		100 = strategoi_estate_events.2
		100 = strategoi_estate_events.3
		100 = strategoi_estate_events.4 #Bonus
		100 = strategoi_estate_events.5
		100 = strategoi_estate_events.6
		100 = strategoi_estate_events.7
		100 = strategoi_estate_events.8
		100 = strategoi_estate_events.9
		100 = strategoi_estate_events.10 
		100 = strategoi_estate_events.11 
		400 = strategoi_estate_events.12 #Demands
		100 = strategoi_estate_events.13
		100 = strategoi_estate_events.14 
		
		# Exarches
		50 = exarches_estate_events.1
		50 = exarches_estate_events.2
		50 = exarches_estate_events.3
		100 = exarches_estate_events.4
		
		# Peasants for BTIP
		100 = peasants_estate_events.1
		100 = peasants_estate_events.2
		100 = peasants_estate_events.3
		100 = peasants_estate_events.4
		100 = peasants_estate_events.5
		400 = peasants_estate_events.6 #Disloyal
		100 = peasants_estate_events.7
		100 = peasants_estate_events.8
		100 = peasants_estate_events.9
		100 = peasants_estate_events.10 #Bonus
	}
}
#Byz Military Parades mechanic
# country
# root = winning country, from = loser country
on_war_won = {
	#Vanilla
	FROM = { country_event = { id = flavor_cri.6 } }
	ROOT = { country_event = { id = tributary_events.32 } }
	if = {
		limit = {
			has_country_flag = can_gain_legendary_pirates_flag
			NOT = { has_ruler_flag = historical_pirate }
			has_government_attribute = is_pirate_republic_reform
			FROM = { total_development = ROOT }
		}
		random = {
			chance = 5
			country_event = {
				id = pirates.25
			}
		}
	}
	
	if = {
		limit = {
			is_part_of_hre = yes
			FROM  = { is_part_of_hre = yes }
		}
		ROOT = { save_global_event_target_as = hre_winner }
		FROM = { save_global_event_target_as = hre_loser }
		random_known_country = {
			limit = {
				has_reform = free_city
				NOT = {
					prestige = 40
				}
				NOT = {
					has_country_modifier = fc_treatyconference_timer
				}
			}
			add_country_modifier = {
				name = fc_treatyconference_timer
				duration = 3650
				hidden = yes
			}
			country_event = {
				id = free_cities.7
				days = 7
			}
		}
	}

	if = {
		limit = {
			tag = MLO
			NOT = { has_country_flag = emp_mlo_won_war_with_swiss_mercs }
			any_hired_mercenary_company = {
				home_province = {
					OR = {
						area = switzerland_area
						area = romandie_area
					}
				}
			}
		}
		set_country_flag = emp_mlo_won_war_with_swiss_mercs
	}
	
	if = {
		limit = {
			is_hiring_condottiere_from = SWI
		}
		SWI = { set_country_flag = won_condottiere_war }
		if = {
			limit = {
				tag = PAP
			}
			SWI = {
				set_country_flag = hired_to_pope
			}
		}
	}
	
	if = {
		limit = {
			primary_culture = melanesian
			NOT = { has_country_modifier = warlord_mod }
		}
		FROM = {
			country_event = {
				id = polynesian.17
			}
		}
	}
	if = {
		limit = {
			ROOT = { 
				tag = SWE
				has_country_modifier = swe_vasa_leads_the_rebellion
				is_subject = no
			}
			FROM = { tag = DAN }
		}
		country_event = {
			id = flavor_swe.111
		}
	}
	if = {
		limit = {
			ROOT = { 
				tag = SWE
				has_country_modifier = swe_any_vasa_leads_the_rebellion
				is_subject = no
			}
			FROM = { tag = DAN }
		}
		country_event = {
			id = flavor_swe.105
		}
	}
	if = {
		limit = {
			ROOT = { 
				tag = SWE
				has_country_flag = swe_declared_independence_war
				is_subject = no
			}
			FROM = { tag = DAN }
		}
		country_event = {
			id = flavor_swe.121
		}
	}
	#BR
	if = {
		limit = { tag = BYZ }
		country_event = { id = strategoi_estate_events.31 }
	}
}